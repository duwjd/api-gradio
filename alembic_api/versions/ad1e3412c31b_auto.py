"""auto

Revision ID: ad1e3412c31b
Revises: d67aabec07f5
Create Date: 2025-03-28 15:27:46.421402

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "ad1e3412c31b"
down_revision: Union[str, None] = "d67aabec07f5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "resource_llm",
        sa.Column(
            "code",
            sa.String(length=255),
            nullable=False,
            comment="분석 코드 (ex: LLM-GEMINI, LLM-CHATGPT)",
        ),
        sa.Column("name", sa.String(length=20), nullable=False, comment="LLM 이름"),
        sa.Column(
            "option", sa.String(length=255), nullable=False, comment="llm 파라미터"
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            server_default=sa.text("1"),
            nullable=True,
            comment="활성화 여부",
        ),
        sa.Column(
            "order",
            mysql.INTEGER(display_width=11),
            server_default=sa.text("0"),
            nullable=True,
            comment="순서",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("code"),
    )
    op.create_table(
        "resource_llm_assist",
        sa.Column(
            "code",
            sa.String(length=255),
            nullable=False,
            comment="분석 코드 (ex: LLM-ASSIST-000001)",
        ),
        sa.Column(
            "title",
            sa.String(length=255),
            nullable=False,
            comment="어시스턴트 이름 (ex: 문서 요약, 맞춤범 검사)",
        ),
        sa.Column(
            "input_type",
            sa.String(length=255),
            nullable=False,
            comment="입력 데이터 형식",
        ),
        sa.Column(
            "result_type",
            sa.String(length=255),
            nullable=False,
            comment="출력 데이터 형식",
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            server_default=sa.text("1"),
            nullable=True,
            comment="활성화 여부",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("code"),
    )
    op.create_table(
        "resource_llm_assist_prompt",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "assist_code",
            sa.String(length=255),
            nullable=False,
            comment="분석 코드 (ex: LLM-ASSIST-000001)",
        ),
        sa.Column(
            "llm_code",
            sa.String(length=255),
            nullable=False,
            comment="llm 코드 (ex: LLM-GEMINI, LLM-CHATGPT)",
        ),
        sa.Column(
            "name",
            sa.String(length=255),
            nullable=False,
            comment="어시스턴트 이름 (ex: 문서 요약, 맞춤범 검사)",
        ),
        sa.Column("prompt", sa.Text(), nullable=False, comment="어시스턴트 프롬프트"),
        sa.Column(
            "order",
            mysql.INTEGER(display_width=11),
            server_default=sa.text("0"),
            nullable=True,
            comment="순서",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("resource_llm_assist_prompt")
    op.drop_table("resource_llm_assist")
    op.drop_table("resource_llm")
    # ### end Alembic commands ###
